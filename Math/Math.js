(()=>{var base;(()=>{try{base=window;}catch(e){try{base=self;}catch(e){}}if (!base) return;})();let proto=Number.prototype;"sin,cos,tan,sinh,cosh,tanh,asin,acos,atan,asinh,acosh,atanh,pow,exp,expm1,log,log1p,log2,log10,atan2,hypot,abs,sign,sqrt,cbrt,floor,ceil,trunc,round,max,min,random,PI,E,LN2,LN10,LOG2E,LOG10E".split(",").forEach(v=>base[v]=Math[v]);ln=log;M_PI=PI;M_E=E;TAU=2*PI;Euler=0.577215664901532860;let radian=v=>v*PI/180;base.radian=x=>radian(x);proto.radian=function(){return radian(this);};let degree=v=>v/180*PI;base.degree=x=>degree(x);proto.degree=function(){return degree(this);};let clamp=(v,min,max)=>min(max(v,min),max);base.clamp=(x,min,max)=>clamp(x,min,max);proto.clamp=function(min,max){return clamp(this,min,max);};let sum=args=>{let a=args.map(v=>parseFloat(v)).filter(v=>!isNaN(v));return a.reduce((p,c)=>p+c,0);};base.sum=(...values)=>sum(values);let product=args=>{let a=args.map(v=>parseFloat(v)).filter(v=>!isNaN(v));return a.reduce((p,c)=>p+c,1);};base.product=(...values)=>product(values);let lcm=args=>{let a=args.map(v=>max(parseInt(v),1)).filter(v=>!isNaN(v));var m=1;if (a.length) m=max.apply({},a);var l=m;for (;a.some(n=>l%n);l+=m);return l;};base.lcm=(...values)=>lcm(values);let gcd=args=>{let a=args.map(v=>parseInt(v)).filter(v=>!isNaN(v));if (a.length) {var g=a[0];for (var n=1;n<a.length;n++) {var l=Math.max(g,a[n]),s=Math.min(g,a[n]);while (s) {var r=l%s;if (r) l=s,s=r;else g=s,s=0;}}return g;}else return null;};base.gcd=base.gcm=(...values)=>gcd(values);let factorize=a=>{let v=parseInt(a);if (isNaN(v)||v<1) return NaN;else if (v==1) return [];else {let l=[];var c=v;for (var n=2;n<=c;n++) {if ((c/n)%1==0) {c/=n;l.push(n);if (c==1) break;else n=1;}else if (c/n<2) n=c-1;}return l;}};base.factorize=x=>factorize(x);let combin=(rn,rr)=>{let n=parseInt(rn),r=parseInt(rr);if ((n<0)||isNaN(n)||(r<0)||isNaN(r)||(n<r)) return NaN;var y=1;for (var m=1;m<=r;m++) y*=(n-r+m)/m;return Math.round(y);};base.combin=(n,r)=>combin(n,r);let permut=(rn,rr)=>{let n=parseInt(rn),r=parseInt(rr);if ((n<0)||isNaN(n)||(r<0)||isNaN(r)||(n<r)) return NaN;var y=1;for (var m=1;m<=r;m++) y*=(n-r+m);return y;};base.permut=(n,r)=>permut(n,r);let multinomial=args=>{let a=Array.from(args).map(v=>parseInt(v)).filter(v=>(!isNaN(v))&&(v>=0));var s=a.reduce((p,c)=>p+c,0);var y=1;a.forEach(r=>{if (s>r) for (var m=r;m>0;m--,s--) y*=s/m;});return Math.round(y);};base.multinomial=(...args)=>multinomial(args);let fact=a=>{let x=parseInt(a);if (isNaN(x)||(x<0)) return NaN;var y=1;for (var n=x;n>0;n--) y*=n;return y;};base.fact=x=>fact(x);let semifact=a=>{let x=parseInt(a);if (isNaN(x)||(x<0)) return NaN;var y=1;for (var n=x;n>0;n-=2) y*=n;return y;};base.semifact=x=>semifact(x);let lgamma=(()=>{let c=[],N=150,cv=log(2*PI)/2;let pr=(a1,a2)=>{let a=[];for (var n=0;n<(a1.length+a2.length-1);n++) a[n]=0;for (var n=0;n<a1.length;n++) for (var m=0;m<a2.length;m++) a[n+m]+=a1[n]*a2[m];return a;};let int=a=>{var v=0;for (var n=0;n<a.length;n++) v+=a[n]/(n+1);return v;};let setup=()=>{if (!c.setup) for (var n=1;n<=N;n++) {var a=[-1,2];for (var m=0;m<n;m++) a=pr(a,[m,1]);c[n-1]=int(a);}};return a=>{let x=parseFloat(a);if (isNaN(x)||(x<=0)) return NaN;setup();var y=(x-0.5)*log(x)-x+cv;c.forEach((c,i)=>{var v=c/2/(i+1);for (var n=0;n<=i;n++) v/=x+1+n;y+=v;});return y;};})();base.lgamma=x=>lgamma(x);let gamma=a=>{let x=parseFloat(a);if (isNaN(x)&&(x<=0)) return NaN;switch (x%1) {case 0:return fact(x-1);case 0.5:let n=x-0.5;var y=sqrt(PI);if (n>0) y*=semifact(2*n-1)/(2**n);return y;default:return exp(lgamma(x));}};base.gamma=x=>gamma(x);let beta=(()=>{let N=1000;let halves=(x,y)=>{if ((x==0.5)&&(y==0.5)) return PI;var t=x,v=1;while (t>0.5) {t--;v*=t/(t+y);}return v*halves(y,0.5);};let f1=(x,y)=>{var v=(x+y)/(x*y);for (var n=1;n<=N;n++) v/=1+x*y/n/(x+y+n);return v;};let f2=(x,y)=>{var v=0;for (var n=0;n<=N;n++) {var sv=(-1)**n/(x+n);for (var m=1;m<=n;m++) sv*=(y-m)/m;v+=sv;}return v;};return (rx,ry)=>{let x=parseFloat(rx),y=parseFloat(ry);if (isNaN(x)||(x<=0)||isNaN(y)||(y<=0)) return NaN;if ((x%1==0)&&(y%1==0)) return 1/multinomial([x-1,y-1])/(x+y-1);else if ((x%1==0.5)&&(y%1==0.5)) halves(x,y);else {let m=max(x,y);if (m>=1) return f2(x,y);else if (m<=0.5) return f1(x,y);else return (-2*m+2)*f1(x,y)+(2*m-1)*f2(x,y);}};})();base.beta=(x,y)=>beta(x,y);let erf=(()=>{let N=50;for (var n=0;n<N;n++) ;return a=>{let x=parseFloat(a);if (isNaN(x)) return NaN;if (log10(abs(x))*(2*N+1)>=log10(Number.MAX_VALUE)) return sign(x);var y=0;for (var n=0;n<=N;n++) {var v=x/(2*n+1);for (var k=1;k<=n;k++) v*=-(x**2)/k;y+=v;}y*=2/sqrt(PI);return y;};})();base.erf=x=>erf(x);let invErf=(()=>{let N=50,c=[1];let setup=()=>{if (c.length==1) for (var k=1;k<=N;k++) {c[k]=0;for (var m=0;m<k;m++) c[k]+=c[m]*c[k-1-m]/(m+1)/(2*m+1);}};return a=>{let x=parseFloat(a);if (isNaN(x)||(x>1)||(x<-1)) return NaN;if (abs(x)==1) return x*Infinity;setup();var y=0;c.forEach((c,k)=>{y+=c/(2*k+1)*(sqrt(PI)*x/2)**(2*k+1)});return y;};})();base.invErf=x=>invErf(x);let lambertW=a=>{let x=parseFloat(a);if (isNaN(x)) return NaN;else if (x<-1/E) return NaN;else if (x==-1/E) return -1;var c=x>0?(-1+sqrt(1+4*x))/2:0,p;for (var n=1;n<=1000;n++) {p=c;var pt=(p*p+x/exp(p))/(p+1);pt=p*exp(p)-pt*exp(pt);if (!pt) break;c=p-((p*exp(p)-x)**2)/(p+1)/exp(p)/pt;if (abs(c/p-1)<1e-16) break;}return c;};base.lambertW=x=>lambertW(x);let bernoulli=a=>{let n=parseInt(a);if (isNaN(n)||n<0) return NaN;var b=0;for (var j=0;j<=n;j++) {var p=0;for (var m=j;m<=n;m++) p+=combin(m,j)/(m+1);b+=p*((-1)**j)*(j**n);}return b;};base.bernoulli=x=>bernoulli(x);(()=>{let pa=args=>{let a=Array.from(args).map(rv=>{let v=parseFloat(rv);return isNaN(v)?0:v;});let dim=sqrt(a.length);if (dim%1==0) return {args:a,dim:dim};else return null;};let rm=(a,d,r,c)=>{return a.filter((v,i)=>{if ((i>=c*d)&&(i<(c+1)*d)) return false;else if ((i-r)%d==0) return false;else return true;});};let d=(a,dim)=>{if (dim==1) return a[0];else {var v=0;for (var r=0;r<dim;r++) v+=((-1)**r)*a[r]*d(rm(a,dim,r,0),dim-1);return v;}};let det=args=>{let o=pa(args);if (o) return d(o.args,o.dim);else return null;};let inverseMatrix=args=>{let o=pa(args);if (!o) return null;let dv=det(o.args);if (!dv) return null;let v=[];for (var c=0;c<o.dim;c++) for (var r=0;r<o.dim;r++) v.push((-1)**(c+r)*d(rm(o.args,o.dim,c,r),o.dim-1)/dv);return v;};base.det=(...matrix)=>det(matrix);base.inverseMatrix=(...matrix)=>inverseMatrix(matrix);})();(()=>{const SQRT3=sqrt(3);let alloc=args=>{var s;switch (args.length) {case 0:s=["Any"];break;case 1:s=args[0]==0?["Any"]:[];break;case 2:s=one.apply(0,args.reverse());break;case 3:s=two.apply(0,args.reverse());break;case 4:s=three.apply(0,args.reverse());break;case 5:s=four.apply(0,args.reverse());break;default:s=higher(args);break;}s.forEach(v=>{["x","y"].forEach(x=>v[x]=round(v[x]*1e+15)*1e-15);});return s;};let one=(a,b)=>[{x:-b/a,y:0}];let two=(a,b,c)=>{let v1=-b/(2*a);let v2=(b**2)/(4*a**2)-c/a;if (v2>0) {let r=v2**0.5;return [{x:v1+r,y:0},{x:v1-r,y:0}];}if (v2<0) {let r=(-v2)**0.5;return [{x:v1,y:+r},{x:v1,y:-r}];}if (v2==0) return [{x:v1,y:0}];};let three=(a,b,c,d)=>{let nb=b/a,nc=c/a,nd=d/a;var l=two(1,2*nb**3-9*nb*nc+27*nd,(nb**2-3*nc)**3);if (l[0].y==0) {l=[l[0],l[1]?l[1]:l[0]];l=l.map(v=>cbrt(v.x));return [{x:(-nb+l[0]+l[1])/3,y:0},{x:(-nb*2-l[0]-l[1])/6,y:(l[0]-l[1])*SQRT3/6},{x:(-nb*2-l[0]-l[1])/6,y:(l[1]-l[0])*SQRT3/6}];}else {let r=cbrt(hypot(l[0].y,l[0].x)),t=atan2(l[0].y,l[0].x)/3;let x=r*cos(t),y=r*sin(t);return [{x:(-nb+x*2)/3,y:0},{x:(-nb-x-SQRT3*y)/3,y:0},{x:(-nb-x+SQRT3*y)/3,y:0}];}};let four=(a,b,c,d,e)=>{let nb=b/a,nc=c/a,nd=d/a,ne=e/a;let bq=nb/4;let p=nc-6*bq**2,q=nd-2*nc*bq+8*bq**3,r=ne-nd*bq+nc*bq**2-3*bq**4;let ul=three(1,2*p,p**2-4*r,-(q**2));let u=ul.find(o=>o.y==0).x;if (!u) return [];let ru=u**0.5;return [].concat(two(1,+ru,(p+u-q/ru)/2),two(1,-ru,(p+u+q/ru)/2)).map(v=>{v.x-=bq;return v;});};let higher=a=>{let s=[];let da=differ(a);let dda=differ(da);let evx=alloc(da).filter(o=>o.y==0).map(o=>o.x).sort((a,b)=>a-b);var aveStep=0;if (evx.length>1) for (var n=0;n<(evx.length-1);n++) aveStep+=(evx[n+1]-evx[n])/(evx.length-1)/4;else aveStep=1;if (!evx.length) {let rav=assign(0,a),sl=assign(0,da);if (rav*sl>0) findBorder(0,a,da,dda,-aveStep,s);if (rav*sl<0) findBorder(0,a,da,dda,+aveStep,s);}let f=evx[0],l=evx[evx.length-1];evx.forEach(x=>{if (assign(x,a)==0) s.push({x:x,y:0});});if (assign(f-aveStep,da)*assign(f,a)>0) findBorder(f,a,da,dda,-aveStep,s);if (assign(l+aveStep,da)*assign(l,a)<0) findBorder(l,a,da,dda,+aveStep,s);for (var n=0;n<(evx.length-1);n++) {let ls=assign(evx[n],a),rs=assign(evx[n+1],a);if (ls*rs<0) {let v=approx((evx[n]+evx[n+1])/2,a,da,dda);if (v!=null) s.push({x:v,y:0});}}if ((a.length-1-s.length)<5) {var qa=a,big=false;s.forEach(v=>{let qr=div(a,[-v.x,1]);big=big||abs(qr.remainder[0]/v.x)>=1e-10;qa=qr.quotient;});if (!big) s.push.apply(s,alloc(qa));}return s;};let differ=args=>{let a=args.map((v,i)=>v*i);a.shift();return a;};let assign=(x,a)=>{var v=0;a.forEach((c,i)=>v+=c*(x**i));return v;};let findBorder=(val,a,da,dda,st,s)=>{let rav=assign(v,a);var v=val;for (;assign(v,a)*rav<0;v+=st);v=approx(v-st/2,a,da,dda);if (v!=null) s.push({x:v,y:0});};let approx=(x,f0,f1,f2)=>{var c=x,p;var n=0;do {p=c;let p0=assign(p,f0),p1=assign(p,f1),p2=assign(p,f2);let v=[2*p0*p1,2*p1*p1-p0*p2];if (v[0]==0) return p;else if (v[1]==0) return null;c=p-v[0]/v[1];if (!isFinite(c)) return p;if (n>100) return c;n++;} while (abs(p-c)>=1e-16);return c;};let divide=(f,b)=>{let o=div(parseArg(f),parseArg(b));o.quotient=o.quotient.reverse();o.remainder=o.remainder.reverse();return o;};let div=(f,b)=>{if (b.length>f.length) return {quotient:[0],remainder:Array.from(f)};else {let r=Array.from(f),q=[];for (var n=r.length-b.length;n>=0;n--) {let d=r[n+b.length-1]/b[b.length-1];q.unshift(d);b.forEach((v,i)=>r[n+i]-=v*d);}while (r[r.length-1]==0) r.pop();if (r.length==0) r.push(0);return {quotient:q,remainder:r};}};let parseArg=args=>{let a=Array.from(args).reverse();while (a[a.length-1]==0) a.pop();return a;};let assignValue=(x,args)=>assign(x,parseArg(args));let solve=args=>{let s=alloc(parseArg(args));return s.filter(v=>v.y==0).map(v=>v.x).sort((a,b)=>a-b);};let solveWithOption=args=>{var a=Array.from(args);var o=a.pop();a=parseArg(a);if (!o) o={imaginal:false};let s=alloc(a);if (o.imaginal) return s.map(v=>iNumber(v));else return s.filter(v=>v.y==0).map(v=>v.x);};let iNumber=(()=>{return o=>{let toString=()=>`(${o.x})+(${o.y})i`;let toPrimitive=t=>{switch (t) {case "default":case "string":return toString();case "number":return o.x;}};return new Proxy({toString:()=>toString()},{get:(t,p)=>{switch (p) {case Symbol.toStringTag:return "ImaginalNumber";case Symbol.toPrimitive:return t=>toPrimitive(t);case "x":case "real":return o.x;case "y":case "image":return o.y;case "r":return hypot(o.y,o.x);default:return t[p];}}});};})();base.assignValue=(x,...args)=>assignValue(x,args);base.divide=(from,by)=>divide(from,by);base.solve=(...args)=>solve(args);base.solveWithOption=(...args)=>solveWithOption(args);})();})();